{
  "compilerOptions": {
    /* Projects */
    "incremental": true,                                 /* Enable incremental compilation */

    /* Language and Environment */
    "target": "ES2020",                                  /* Set the JavaScript language version for emitted JavaScript and include compatible library declarations. */

    /* Modules */
    "module": "CommonJS",                                /* Specify what module code is generated. */     /* Specify the root folder within your source files. */
    "moduleResolution": "node",                          /* Specify how TypeScript looks up a file from a given module specifier. */
    "baseUrl": "./src",                                  /* Specify the base directory to resolve non-relative module names. */
    "resolveJsonModule": true,

    /* Emit */
    "declaration": false,                                /* Generate .d.ts files from TypeScript and JavaScript files in your project. */
    "declarationMap": false,                             /* Create sourcemaps for d.ts files. */
    "emitDeclarationOnly": false,                        /* Only output d.ts files and not JavaScript files. */
    "outDir": "./dist",                                  /* Specify an output folder for all emitted files. */
    "removeComments": true,                              /* Disable emitting comments. */
    "importsNotUsedAsValues": "remove",                  /* Specify emit/checking behavior for imports that are only used for types */
    "noEmitOnError": true,                               /* Disable emitting files if any type checking errors are reported. */
    "preserveConstEnums": false,                         /* Disable erasing `const enum` declarations in generated code. */

    /* Interop Constraints */
    "esModuleInterop": true,                             /* Emit additional JavaScript to ease support for importing CommonJS modules. This enables `allowSyntheticDefaultImports` for type compatibility. */
    "forceConsistentCasingInFileNames": true,            /* Ensure that casing is correct in imports. */

    /* Type Checking */
    "strict": true,                                     /* Enable all strict type-checking options. */
    "noUnusedLocals": false,                             /* Enable error reporting when a local variables aren't read. */
    "noUnusedParameters": false,                          /* Raise an error when a function parameter isn't read */
    "exactOptionalPropertyTypes": true,                  /* Interpret optional property types as written, rather than adding 'undefined'. */
    "noImplicitReturns": true,                           /* Enable error reporting for codepaths that do not explicitly return in a function. */
    "noImplicitOverride": true,                          /* Ensure overriding members in derived classes are marked with an override modifier. */
    "noPropertyAccessFromIndexSignature": true,          /* Enforces using indexed accessors for keys declared using an indexed type */
    "allowUnusedLabels": false,                          /* Disable error reporting for unused labels. */
    "allowUnreachableCode": false,                       /* Disable error reporting for unreachable code. */

    /* Completeness */
    "skipLibCheck": true                                 /* Skip type checking all .d.ts files. */
  },
  "exclude": [
    "dist",
    "node_modules"
  ]
}